// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScrollWrapper should match to snapshot 1`] = `
<RCTScrollView
  bounces={true}
  contentContainerStyle={
    Object {
      "flexGrow": 1,
      "marginBottom": 20,
      "marginHorizontal": 40,
      "paddingBottom": 40,
    }
  }
  keyboardShouldPersistTaps="always"
  showsVerticalScrollIndicator={false}
  style={
    Object {
      "width": "100%",
    }
  }
  testID="scrollView"
>
  <View>
    <View
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderBottomColor": "black",
          "borderBottomWidth": 1,
          "flexDirection": "row",
          "height": 160,
          "justifyContent": "space-between",
        }
      }
    >
      <View
        pointerEvents="auto"
      >
        <RNCCheckbox
          forwardedRef={null}
          onValueChange={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "height": 32,
                "width": 32,
              },
              undefined,
            ]
          }
          value={false}
        />
      </View>
      <Text
        style={
          Object {
            "flex": 1,
            "fontSize": 32,
            "paddingHorizontal": 40,
          }
        }
      >
        Add those todos
      </Text>
      <View
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "red",
            "borderRadius": 100,
            "height": 60,
            "justifyContent": "center",
            "width": 60,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 16,
              "fontWeight": "bold",
            }
          }
        >
          x
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderBottomColor": "black",
          "borderBottomWidth": 1,
          "flexDirection": "row",
          "height": 160,
          "justifyContent": "space-between",
        }
      }
    >
      <View
        pointerEvents="auto"
      >
        <RNCCheckbox
          forwardedRef={null}
          onValueChange={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "height": 32,
                "width": 32,
              },
              undefined,
            ]
          }
          value={false}
        />
      </View>
      <Text
        style={
          Object {
            "flex": 1,
            "fontSize": 32,
            "paddingHorizontal": 40,
          }
        }
      >
        Delete second
      </Text>
      <View
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "red",
            "borderRadius": 100,
            "height": 60,
            "justifyContent": "center",
            "width": 60,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 16,
              "fontWeight": "bold",
            }
          }
        >
          x
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderBottomColor": "black",
          "borderBottomWidth": 1,
          "flexDirection": "row",
          "height": 160,
          "justifyContent": "space-between",
        }
      }
    >
      <View
        pointerEvents="auto"
      >
        <RNCCheckbox
          forwardedRef={null}
          onValueChange={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "height": 32,
                "width": 32,
              },
              undefined,
            ]
          }
          value={true}
        />
      </View>
      <Text
        style={
          Object {
            "flex": 1,
            "fontSize": 32,
            "paddingHorizontal": 40,
          }
        }
      >
        Add third one
      </Text>
      <View
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "red",
            "borderRadius": 100,
            "height": 60,
            "justifyContent": "center",
            "width": 60,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 16,
              "fontWeight": "bold",
            }
          }
        >
          x
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
